X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
print(X)
3^2
((-1-0)^2 + (-2-0)^2 + (4-(-2))^2 + (2-2)^2)^(1/2)
dEuclidean = ((-1-0)^2 + (-2-0)^2 + (4-(-2))^2 + (2-2)^2)^(1/2)
round(dEuclidean, 2)
dEuclidean = ((-1-0)^2 + (-2-0)^2 + (4-(-2))^2 + (2-2)^2)^(1/2)
round(dEuclidean, 3)
dEuclidean = ((-1-0)^2 + (-2-0)^2 + (4-(-2))^2 + (2-2)^2)^(1/2)
round(dEuclidean, 2)
dManhattan = abs(-1-2) + abs(-2-(-1)) + abs(4-(-1)) + abs(2-3)
dManhattan = abs(-1-2) + abs(-2-(-1)) + abs(4-(-1)) + abs(2-3)
dManhattan
dManhattan = abs(-1-2) + abs(-2-(-1)) + abs(4-(-1)) + abs(2-3)
round(dManhattan, 2)
dMinkowski = ((abs(0-2))^3 + (abs(0+1))^3 + (abs(-2+1))^3 + (abs(2-3))^3)^(1/3)
dMinkowski
dMinkowski = ((abs(0-2))^3 + (abs(0+1))^3 + (abs(-2+1))^3 + (abs(2-3))^3)^(1/3)
round(dMinkowski, 2)
library(MASS)
library(dplyr)
library(MASS)
library(dplyr)
Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, EngineSize, Horsepower, MPG.highway, Length)
Vans93
library(MASS)
library(dplyr)
Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, EngineSize, Horsepower, MPG.highway, Length)
Vans93
number_of_Van <- nrow(Vans93)
number_of_Van
library(MASS)
library(dplyr)
Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, EngineSize, Horsepower, MPG.highway, Length)
Vans93
number_of_Van <- nrow(Vans93)
cat("The number of objects that Vans93 has are:", number_of_Van)
colnames(Vans_Euclidean)<-Vans93[,1]
Vans_matrix <- Vans93[,-1]
Vans_matrix
x <- matrix(c(1,1,2,3,1,4), nrow = 3, byrow = T)
x
dist(x)
dist(x, method = "manhattan")
dist(x, method = "minkowski", p = 3, upper = T)
Vans_matrix <- Vans93[,-1]
Vans_Euclidean <- dist(Vans_matrix)
Vans_Euclidean
Vans_matrix <- as.matrix(Vans93[,-1])
Vans_matrix
Vans_Euclidean <- dist(Vans_matrix)
Vans_Euclidean
#Vans_matrix <- as.matrix(Vans93[,-1])
#Vans_Euclidean <- dist(Vans_matrix)
#Vans_Euclidean
# Assuming you have already created the Vans93 dataframe
# If not, refer to the previous code to create it.
# Remove the first column (Model) and convert to matrix
Vans_Matrix <- as.matrix(Vans93[, -1])
# Calculate the Euclidean distance matrix
Vans_Euclidean <- dist(Vans_Matrix)
# Set row and column names
rownames(Vans_Euclidean) <- colnames(Vans_Euclidean) <- Vans93$Model
Vans_matrix <- as.matrix(Vans93[,-1])
Vans_Euclidean <- dist(Vans_matrix)
Vans_Euclidean
colnames(Vans_Euclidean)<-Vans93[,1]
Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, EngineSize, Horsepower, MPG.highway, Length)
Vans_matrix <- as.matrix(Vans93[,-1])
Vans_Euclidean <- dist(Vans_matrix)
Vans_Euclidean
colnames(Vans_Euclidean)<-Vans93[,1]
Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, EngineSize, Horsepower, MPG.highway, Length)
Vans_matrix <- as.matrix(Vans93[,-1])
Vans_Euclidean <- dist(Vans_matrix)
Vans_Euclidean
#colnames(Vans_Euclidean)<-Vans93[,1]
rownames(Vans_Euclidean)<-Vans93[,1]
#Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, #EngineSize, Horsepower, MPG.highway, Length)
#Vans_matrix <- as.matrix(Vans93[,-1])
#Vans_Euclidean <- dist(Vans_matrix)
#Vans_Euclidean
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
# Assuming you have already created the Vans93 dataframe
# If not, refer to the previous code to create it.
# Remove the first column (Model) and convert to matrix
Vans_Matrix <- as.matrix(Vans93[, -1])
# Calculate the Euclidean distance matrix
Vans_Euclidean <- dist(Vans_Matrix)
# Set row and column names
colnames(Vans_Euclidean) <- rownames(Vans_Euclidean) <- Vans93$Model
Vans93 <- select(filter(Cars93, Type == "Van"), Model, Price, EngineSize, Horsepower, MPG.highway, Length)
Vans_matrix <- as.matrix(Vans93[,-1])
Vans_Euclidean <- dist(Vans_matrix)
Vans_Euclidean
colnames(Vans_Euclidean)<-Vans93[,1]
