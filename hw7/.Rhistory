# Custom options for knitting
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = "center",
cache = FALSE
)
#library(tidyverse)
library(tm)
# Custom options for knitting
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
error = FALSE,
fig.align = "center",
cache = FALSE
)
#library(tidyverse)
library(tm)
news<-read.csv("news.csv",header=T)
posWords <- scan("positive-words.txt", character(0), sep = "\n")  # 2006 items
negWords <- scan("negative-words.txt", character(0), sep = "\n")  # 4783 items
head(posWords,15)
head(negWords,15)
#library(tidyverse)
library(tm)
news<-read.csv("news.csv",header=T)
#library(tidyverse)
library(tm)
news<-read.csv("news.csv",header=T)
news
nrow(news)
nrow(news$year)
news$publish_date <- as.Date(news$publish_date, format = "%Y%m%d")
# Check the range of years in the dataset
years_range <- range(year(news$publish_date))
news$publish_date <- as.Date(news$publish_date, format = "%Y%m%d")
# Check the range of years in the dataset using format function
min_year <- min(format(news$publish_date, "%Y"))
max_year <- max(format(news$publish_date, "%Y"))
# Display the range of years
cat("Minimum Year:", min_year, "\n")
cat("Maximum Year:", max_year, "\n")
range(news$year)
range <- range(news$year)
year_range = range[1] - range[0]
range <- range(news$year)
year_range = range[1] - range[0]
year_range
range <- range(news$year)
year_range = range[2] - range[1]
year_range
charVector <- news$headline_text
head(charVector)
wordVector <- VectorSource(charVector)
wordVector <- VectorSource(charVector)
wordVector
wordVector <- VectorSource(charVector)
wordCorpus <- Corpus(wordVector)
wordVector <- VectorSource(charVector)
wordCorpus <- Corpus(wordVector)
wordCorpus
wordVector <- VectorSource(charVector)
wordCorpus <- Corpus(wordVector)
tm_map(wordCorpus)
tm_map(wordCorpus, tolower(wordCorpus))
tm_map(wordCorpus, FUN = tolower(wordCorpus))
tm_map(wordCorpus, FUN = tolower(wordCorpus))
cleaned_text <- function(wordCorpus) {wordCorpus <- tolower(wordCorpus)}
tm_map(wordCorpus, cleaned_text)
cleaned_text <- function(wordCorpus) {wordCorpus <- tolower(wordCorpus)}
n <- tm_map(wordCorpus, cleaned_text)
n
cleaned_text <- function(charVector) {charVector <- tolower(charVector)}
n <- tm_map(wordCorpus, cleaned_text)
n
cleaned_text <- function(charVector) {charVector <- tolower(charVector)}
n <- tm_map(wordCorpus, cleaned_text)
n
cleaned_text <- function(wordCorpus) {wordCorpus <- tolower(wordCorpus) + removeNumbers(wordCorpus) + removePunctuation(wordCorpus) + removeWords(wordCorpus, stopwords("english"))}
tm_map(wordCorpus, cleaned_text)
cleaned_text <- function(wordCorpus) {wordCorpus <- tolower(wordCorpus) removeNumbers(wordCorpus) removePunctuation(wordCorpus) removeWords(wordCorpus, stopwords("english"))}
cleaned_text <- function(wordCorpus) {wordCorpus <- tolower(wordCorpus), removeNumbers(wordCorpus), removePunctuation(wordCorpus), removeWords(wordCorpus, stopwords("english"))}
cleaned_text <- function(wordCorpus) {wordCorpus <- tolower(wordCorpus)%>% removeNumbers(wordCorpus)%>% removePunctuation(wordCorpus)%>% removeWords(wordCorpus, stopwords("english"))}
tm_map(wordCorpus, cleaned_text)
